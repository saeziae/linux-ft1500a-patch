diff --git a/arch/arm64/Kconfig.platforms b/arch/arm64/Kconfig.platforms
index 91c7ffad8..0952350a2 100644
--- a/arch/arm64/Kconfig.platforms
+++ b/arch/arm64/Kconfig.platforms
@@ -140,6 +140,11 @@ config ARCH_MVEBU
 	   - Armada 7K SoC Family
 	   - Armada 8K SoC Family
 
+config ARCH_PHYTIUM
+	bool "Phytium FT SoC Family"
+	help
+	  This enables support for Phytium FT SoC Family. Now only FT1500a/4 is tested.
+
 config ARCH_QCOM
 	bool "Qualcomm Platforms"
 	select GPIOLIB
diff --git a/arch/arm64/boot/Makefile b/arch/arm64/boot/Makefile
index cd3414898..de31cfd19 100644
--- a/arch/arm64/boot/Makefile
+++ b/arch/arm64/boot/Makefile
@@ -18,6 +18,9 @@ OBJCOPYFLAGS_Image :=-O binary -R .note -R .note.gnu.build-id -R .comment -S
 
 targets := Image Image.bz2 Image.gz Image.lz4 Image.lzma Image.lzo
 
+$(obj)/uImage: $(obj)/Image FORCE
+	mkimage -A arm64 -O linux -T kernel -a 0x80080000 -e 0x80080000 -d Image uImage
+
 $(obj)/Image: vmlinux FORCE
 	$(call if_changed,objcopy)
 
diff --git a/arch/arm64/boot/dts/Makefile b/arch/arm64/boot/dts/Makefile
index 4690364d5..ff8820d78 100644
--- a/arch/arm64/boot/dts/Makefile
+++ b/arch/arm64/boot/dts/Makefile
@@ -16,6 +16,7 @@ subdir-y += lg
 subdir-y += marvell
 subdir-y += mediatek
 subdir-y += nvidia
+subdir-y += phytium
 subdir-y += qcom
 subdir-y += realtek
 subdir-y += renesas
diff --git a/arch/arm64/boot/dts/phytium/Makefile b/arch/arm64/boot/dts/phytium/Makefile
new file mode 100644
index 000000000..edcae059c
--- /dev/null
+++ b/arch/arm64/boot/dts/phytium/Makefile
@@ -0,0 +1,3 @@
+dtb-$(CONFIG_ARCH_PHYTIUM) += ft1500a4-simple.dtb
+dtb-$(CONFIG_ARCH_PHYTIUM) += ft1500a4-simple-altpci.dtb
+dtb-$(CONFIG_ARCH_PHYTIUM) += ft1500a4-pc.dtb
diff --git a/arch/arm64/boot/dts/phytium/ft1500a4-pc.dts b/arch/arm64/boot/dts/phytium/ft1500a4-pc.dts
new file mode 100644
index 000000000..e01cac754
--- /dev/null
+++ b/arch/arm64/boot/dts/phytium/ft1500a4-pc.dts
@@ -0,0 +1,292 @@
+/*
+ * DTS file for Phytium FT-1500A SoC
+ *
+ * Copyright (C) 2015, Phytium Technology Co., Ltd.
+ *
+ * This file is licensed under a dual GPLv2 or BSD license.
+ */
+
+/dts-v1/;
+
+/memreserve/    0x80000000 0x100000;
+/{
+	model = "phytium FT1500A/4";
+	compatible = "arm,rtsm_ve,aemv8a", "arm,vexpress";
+	#address-cells = <0x2>;
+	#size-cells = <0x2>;
+	interrupt-parent = <&gic>;
+	
+	chosen {
+		linux,pci-probe-only; 
+	};
+	
+	cpus {
+		#address-cells = <0x2>;
+		#size-cells = <0x0>;
+
+		 cpu@0 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x000>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@1 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x001>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@2 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x002>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@3 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x003>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+	};
+	
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x0 0x80000000 0x0 0x80000000>;
+	};
+	
+	gic: interrupt-controller@29800000 {
+		compatible = "arm,gic-v3";
+		#interrupt-cells = <0x3>;
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+		ranges;
+		interrupt-controller;
+		/*regs are different from ft2000?*/
+		reg = <0x0 0x29800000 0x0 0x00010000 
+		       0x0 0x29a00000 0x0 0x00200000 
+		       0x0 0x29c00000 0x0 0x00010000 
+		       0x0 0x29c10000 0x0 0x00010000 
+		       0x0 0x29c20000 0x0 0x00010000>;
+		interrupts = <0x1 0x9 0x4>;
+		linux,phandle = <0x1>;
+		phandle = <0x1>;
+		
+		its: gic-its@29820000 {
+			compatible = "arm,gic-v3-its";
+			msi-controller;
+			reg = <0x0 0x29820000 0x0 0x00020000>;
+			linux,phandle = <0x2>;
+			phandle = <0x2>;
+		};
+	};
+
+	timer { /* drivers/clocksource/arm_arch_timer.c */
+		/* CONFIG_ARM_ARCH_TIMER: 
+			select CLKSRC_OF if OF
+			select CLKSRC_ACPI if ACPI
+		*/
+		compatible = "arm,armv8-timer";
+		interrupts = <0x1 0xd 0x8         /*13+16 = 29 PHYS_SECURE_PPI*/
+				0x1 0xe 0x8       /*14+16 = 30 PHYS_NONSECURE_PPI*/
+				0x1 0xb 0x8       /*11+16 = 27 VIRT_PPI*/
+				0x1 0xa 0x8>;     /*10+16 = 26 HYP_PPI*/
+		/*clock-frequency = <0x2faf080>;*/
+		clock-frequency = <50000000>;
+	};
+	soc {
+		compatible = "arm,amba-bus", "simple-bus";
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+		ranges;
+		#interrupt-cells = <0x1>;
+		interrupt-map-mask = <0x0 0x0 0x3f>;
+		interrupt-map = <0x0 0x0 0x01 0x1 0x0 0x0 0x0 0x01 0x4 
+						0x0 0x0 0x02 0x1 0x0 0x0 0x0 0x02 0x4  /**/
+						0x0 0x0 0x03 0x1 0x0 0x0 0x0 0x03 0x4  /**/
+						0x0 0x0 0x04 0x1 0x0 0x0 0x0 0x04 0x4  /**/
+						0x0 0x0 0x05 0x1 0x0 0x0 0x0 0x05 0x4  /**/
+						0x0 0x0 0x06 0x1 0x0 0x0 0x0 0x06 0x4  /**/
+						0x0 0x0 0x07 0x1 0x0 0x0 0x0 0x07 0x4  /**/
+						0x0 0x0 0x08 0x1 0x0 0x0 0x0 0x08 0x4  /**/
+						0x0 0x0 0x09 0x1 0x0 0x0 0x0 0x09 0x4  /**/
+						0x0 0x0 0x0a 0x1 0x0 0x0 0x0 0x0a 0x4  /**/
+						0x0 0x0 0x0b 0x1 0x0 0x0 0x0 0x0b 0x4  /**/
+						0x0 0x0 0x0c 0x1 0x0 0x0 0x0 0x0c 0x4  /**/
+						0x0 0x0 0x0d 0x1 0x0 0x0 0x0 0x0d 0x4  /**/
+						0x0 0x0 0x0e 0x1 0x0 0x0 0x0 0x0e 0x4  /**/
+						0x0 0x0 0x0f 0x1 0x0 0x0 0x0 0x0f 0x4  /**/
+						0x0 0x0 0x10 0x1 0x0 0x0 0x0 0x10 0x4  /**/
+						0x0 0x0 0x11 0x1 0x0 0x0 0x0 0x11 0x4  /**/
+						0x0 0x0 0x12 0x1 0x0 0x0 0x0 0x12 0x4  /**/
+						0x0 0x0 0x13 0x1 0x0 0x0 0x0 0x13 0x4  /**/
+						0x0 0x0 0x14 0x1 0x0 0x0 0x0 0x14 0x4  /**/
+						0x0 0x0 0x15 0x1 0x0 0x0 0x0 0x15 0x4  /**/
+						0x0 0x0 0x16 0x1 0x0 0x0 0x0 0x16 0x4  /**/
+						0x0 0x0 0x17 0x1 0x0 0x0 0x0 0x17 0x4  /**/
+						0x0 0x0 0x18 0x1 0x0 0x0 0x0 0x18 0x4  /**/
+						0x0 0x0 0x19 0x1 0x0 0x0 0x0 0x19 0x4  /**/
+						0x0 0x0 0x1a 0x1 0x0 0x0 0x0 0x1a 0x4  /**/
+						0x0 0x0 0x1b 0x1 0x0 0x0 0x0 0x1b 0x4  /**/
+						0x0 0x0 0x1c 0x1 0x0 0x0 0x0 0x1c 0x4  
+						0x0 0x0 0x1d 0x1 0x0 0x0 0x0 0x1d 0x4  
+						0x0 0x0 0x1e 0x1 0x0 0x0 0x0 0x1e 0x4  
+						0x0 0x0 0x1f 0x1 0x0 0x0 0x0 0x1f 0x4  
+						0x0 0x0 0x20 0x1 0x0 0x0 0x0 0x20 0x4  
+						0x0 0x0 0x21 0x1 0x0 0x0 0x0 0x21 0x4  /*33+32=65 lpc*/
+						0x0 0x0 0x22 0x1 0x0 0x0 0x0 0x22 0x4  /*34+32=66 uart@28000000*/
+						0x0 0x0 0x23 0x1 0x0 0x0 0x0 0x23 0x4  /*35+32=67 uart@28001000*/
+						0x0 0x0 0x24 0x1 0x0 0x0 0x0 0x24 0x4  /*36+32=68 i2c@28002000*/
+						0x0 0x0 0x25 0x1 0x0 0x0 0x0 0x25 0x4  /*37+32=69 i2c@28003000*/
+						0x0 0x0 0x26 0x1 0x0 0x0 0x0 0x26 0x4  /*38+32=70 wdt*/
+						0x0 0x0 0x27 0x1 0x0 0x0 0x0 0x27 0x4  /*39+32=71 wdt*/
+						0x0 0x0 0x28 0x1 0x0 0x0 0x0 0x28 0x4 
+						0x0 0x0 0x29 0x1 0x0 0x0 0x0 0x29 0x4 
+						0x0 0x0 0x2a 0x1 0x0 0x0 0x0 0x2a 0x4 
+						0x0 0x0 0x2b 0x1 0x0 0x0 0x0 0x2b 0x4 
+						0x0 0x0 0x2c 0x1 0x0 0x0 0x0 0x2c 0x4   /*44+32=76 gmac@28c00000*/
+						0x0 0x0 0x2d 0x1 0x0 0x0 0x0 0x2d 0x4>; /*45+32=77 gmac@28c02000*/
+	
+		i2c_clk12mhz { /*drivers/clk/clk-fixed-rate.c */
+			/* CONFIG_COMMON_CLK */
+			compatible = "fixed-clock";
+			#clock-cells = <0x0>;
+			/*	clock-frequency = <0x1c2000>; */
+			clock-frequency = <0xc35000>;   	/* 12MHz*/
+			clock-output-names = "i2c:clk12mhz";
+			linux,phandle = <0x4>;
+			phandle = <0x4>;
+		};
+
+		cpu_clk50mhz { /*drivers/clk/clk-fixed-rate.c */
+			/* CONFIG_COMMON_CLK */
+			compatible = "fixed-clock";
+			#clock-cells = <0x0>;
+			clock-frequency = <0x3200000>;   	/* 50MHz*/
+			clock-output-names = "cpu:clk50mhz";
+			linux,phandle = <0x5>;
+			phandle = <0x5>;
+		};
+		
+		gmac_clk: clk_csr {
+			compatible = "fixed-clock";
+			#clock-cells = <0>;
+			clock-frequency = <250000000>;
+		};
+		
+		uart0: serial@28000000 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x0 0x28000000 0x0 0x1000>;
+			clock-frequency = <50000000>;
+			interrupts = <0 0x22 4>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+		};
+
+		uart1: serial@28001000 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x0 0x28001000 0x0 0x1000>;
+			clock-frequency = <50000000>;
+			interrupts = <0 0x23 4>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+		};
+		
+		i2c@28002000 {
+			compatible = "snps,designware-i2c";
+			#address-cells = <0x1>;
+			#size-cells = <0>;
+			interrupts = <0x0 0x24 0x4>;
+			clocks = <0x4 0x4>;
+			clock-frequency = <100000>;
+			reg = <0x0 0x28002000 0x0 0x1000>;
+
+			rtc@68 {
+			/*	compatible = "dallas,ds1339";*/
+				compatible = "dallas,ds1307";
+				reg = <0x68>;
+			};
+		};
+		
+		i2c@28003000 {
+			compatible = "snps,designware-i2c";
+			#address-cells = <0x2>;
+			#size-cells = <0x2>;
+			interrupts = <0x0 0x25 0x4>;
+			clocks = <0x4 0x4>;
+			clock-frequency = <100000>;
+			reg = <0x0 0x28003000 0x0 0x1000>;
+		};
+		
+		/*need to be backported from ft2000?*/
+		/*
+		gpio@28006000 {
+			compatible = "arm,platform-gpio";
+			reg = <0x0 0x28006000 0x0 0x80>;
+		};
+		*/
+		
+		pcie0: pcie@40000000{
+			compatible = "pci-host-ecam-generic";
+			device_type = "pci";
+			#address-cells = <0x3>;
+			#size-cells = <0x2>;
+			#interrupt-cells = <0x1>;
+			dma-coherent;
+			reg = <0x0 0x40000000 0x0 0x10000000>;
+			msi-parent = <&its>;
+			bus-range = <0x0 0xff>;
+			interrupt-map-mask = <0x0 0x0 0x0 0x7>;
+			interrupt-map = <0x0 0x0 0x0 0x1 &gic 0x0 0x0 0x0 0x33 0x4>,
+							<0x0 0x0 0x0 0x2 &gic 0x0 0x0 0x0 0x34 0x4>,
+							<0x0 0x0 0x0 0x3 &gic 0x0 0x0 0x0 0x35 0x4>,
+							<0x0 0x0 0x0 0x4 &gic 0x0 0x0 0x0 0x36 0x4>;
+			ranges = <0x01000000 0x00 0x00000000 0x00 0x50000000 0x00 0x01000000>,
+					 <0x02000000 0x00 0x60000000 0x00 0x60000000 0x00 0x20000000>,
+					 <0x03000000 0x01 0x00000000 0x01 0x00000000 0x01 0x00000000>;
+		};
+
+		pmu {
+			compatible = "arm,cortex-a57-pmu";
+			interrupts = <0x0 0x3c 0x4 
+						  0x0 0x3d 0x4 
+						  0x0 0x3e 0x4 
+						  0x0 0x3f 0x4>;
+		};
+
+		gmac0:gmac@28c00000 {
+			compatible = "arm,amba-gmac0", "arm,primecell";
+			arm,primecell-periphid = <0x9>;
+			reg = <0x0 0x28c00000 0x0 0x2000>;
+			interrupts = <0x2c>;
+			status = "disable";
+		};
+		gmac1:gmac@28c02000 {
+			compatible = "arm,amba-gmac1", "arm,primecell";
+			arm,primecell-periphid = <0xb>;
+			reg = <0x0 0x28c02000 0x0 0x2000>;
+			interrupts = <0x2d>;
+			status = "disable";
+		};
+	};
+};
+
+&uart0 {
+	status = "ok";
+};
+&gmac0 {
+	phy-mode = "gmii";
+	status = "ok";
+};
+&gmac1 {
+	phy-mode = "gmii";
+	status = "ok";
+};
\ No newline at end of file
diff --git a/arch/arm64/boot/dts/phytium/ft1500a4-simple-altpci.dts b/arch/arm64/boot/dts/phytium/ft1500a4-simple-altpci.dts
new file mode 100644
index 000000000..ab5cd5663
--- /dev/null
+++ b/arch/arm64/boot/dts/phytium/ft1500a4-simple-altpci.dts
@@ -0,0 +1,204 @@
+/*
+ * DTS file for Phytium FT-1500A SoC
+ *
+ * Copyright (C) 2015, Phytium Technology Co., Ltd.
+ *
+ * This file is licensed under a dual GPLv2 or BSD license.
+ */
+
+/dts-v1/;
+
+/memreserve/    0x80000000 0x100000;
+/{
+	model = "phytium FT1500A/4";
+	compatible = "arm,rtsm_ve,aemv8a", "arm,vexpress";
+	#address-cells = <0x2>;
+	#size-cells = <0x2>;
+	interrupt-parent = <&gic>;
+	
+	chosen {
+		linux,pci-probe-only; 
+	};
+	
+	cpus {
+		#address-cells = <0x2>;
+		#size-cells = <0x0>;
+
+		 cpu@0 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x000>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@1 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x001>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@2 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x002>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@3 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x003>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+	};
+	
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x0 0x80000000 0x0 0x80000000>;
+	};
+	
+	gic: interrupt-controller@29800000 {
+		compatible = "arm,gic-v3";
+		#interrupt-cells = <0x3>;
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+		ranges;
+		interrupt-controller;
+		/*regs are different from ft2000?*/
+		reg = <0x0 0x29800000 0x0 0x00010000 
+		       0x0 0x29a00000 0x0 0x00200000 
+		       0x0 0x29c00000 0x0 0x00010000 
+		       0x0 0x29c10000 0x0 0x00010000 
+		       0x0 0x29c20000 0x0 0x00010000>;
+		interrupts = <0x1 0x9 0x4>;
+		
+		its: gic-its@29820000 {
+			compatible = "arm,gic-v3-its";
+			msi-controller;
+			reg = <0x0 0x29820000 0x0 0x00020000>;
+		};
+	};
+
+	timer { /* drivers/clocksource/arm_arch_timer.c */
+		/* CONFIG_ARM_ARCH_TIMER: 
+			select CLKSRC_OF if OF
+			select CLKSRC_ACPI if ACPI
+		*/
+		compatible = "arm,armv8-timer";
+		interrupts = <0x1 0xd 0x8         /*13+16 = 29 PHYS_SECURE_PPI*/
+				0x1 0xe 0x8       /*14+16 = 30 PHYS_NONSECURE_PPI*/
+				0x1 0xb 0x8       /*11+16 = 27 VIRT_PPI*/
+				0x1 0xa 0x8>;     /*10+16 = 26 HYP_PPI*/
+		/*clock-frequency = <0x2faf080>;*/
+		clock-frequency = <50000000>;
+	};
+	soc {
+		compatible = "arm,amba-bus", "simple-bus";
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+		ranges;
+		
+		gmac_clk: clk_csr {
+			compatible = "fixed-clock";
+			#clock-cells = <0>;
+			clock-frequency = <250000000>;
+		};
+		
+		uart0: serial@28000000 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x0 0x28000000 0x0 0x1000>;
+			clock-frequency = <50000000>;
+			interrupts = <0 0x22 4>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+		};
+
+		uart1: serial@28001000 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x0 0x28001000 0x0 0x1000>;
+			clock-frequency = <50000000>;
+			interrupts = <0 0x23 4>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+		};
+		
+		pcie0: pcie@40000000{
+			compatible = "pci-host-ecam-generic";
+			device_type = "pci";
+			#address-cells = <0x3>;
+			#size-cells = <0x2>;
+			#interrupt-cells = <0x1>;
+			dma-coherent;
+			reg = <0x0 0x40000000 0x0 0x10000000>;
+			msi-parent = <&its>;
+			bus-range = <0x0 0xff>;
+			interrupt-map-mask = <0x0 0x0 0x0 0x7>;
+			interrupt-map = <0x0 0x0 0x0 0x1 &gic 0x0 0x0 0x0 0x33 0x4>,
+							<0x0 0x0 0x0 0x2 &gic 0x0 0x0 0x0 0x34 0x4>,
+							<0x0 0x0 0x0 0x3 &gic 0x0 0x0 0x0 0x35 0x4>,
+							<0x0 0x0 0x0 0x4 &gic 0x0 0x0 0x0 0x36 0x4>;
+			ranges = <0x01000000 0x00 0x00000000 0x00 0x50000000 0x00 0x00f00000>,
+					 <0x02000000 0x00 0x60000000 0x00 0x60000000 0x00 0x20000000>,
+					 <0x03000000 0x20 0x00000000 0x20 0x00000000 0x20 0x00000000>;
+		};
+
+		pmu {
+			compatible = "arm,cortex-a57-pmu";
+			interrupts = <0x0 0x3c 0x4 
+						  0x0 0x3d 0x4 
+						  0x0 0x3e 0x4 
+						  0x0 0x3f 0x4>;
+		};
+
+		gmac0:gmac@28c00000 {
+			compatible = "snps,dwmac";
+			reg = <0 0x28c00000 0x0 0x2000>;
+			interrupts = <0 44 4>;
+			interrupt-names = "macirq";
+			clocks = <&gmac_clk>;
+			clock-names = "stmmaceth";
+			snps,pbl = <16>;
+			snps,abl = <32>;
+			snps,fixed-burst;
+			snps,force_sf_dma_mode;
+			snps,multicast-filter-bins = <64>;
+			snps,perfect-filter-entries = <1>;
+			max-frame-size = <9000>;
+			status = "disable";
+		};
+		gmac1:gmac@28c02000 {
+			compatible = "snps,dwmac";
+			reg = <0 0x28c02000 0x0 0x2000>;
+			interrupts = <0 45 4>;
+			interrupt-names = "macirq";
+			clocks = <&gmac_clk>;
+			clock-names = "stmmaceth";
+			snps,pbl = <16>;
+			snps,abl = <32>;
+			snps,fixed-burst;
+			snps,force_sf_dma_mode;
+			snps,multicast-filter-bins = <64>;
+			snps,perfect-filter-entries = <1>;
+			max-frame-size = <9000>;
+			status = "disable";
+		};
+	};
+};
+
+&uart0 {
+	status = "ok";
+};
+&gmac0 {
+	phy-mode = "gmii";
+	status = "ok";
+};
+&gmac1 {
+	phy-mode = "gmii";
+	status = "ok";
+};
\ No newline at end of file
diff --git a/arch/arm64/boot/dts/phytium/ft1500a4-simple.dts b/arch/arm64/boot/dts/phytium/ft1500a4-simple.dts
new file mode 100644
index 000000000..bf3b63722
--- /dev/null
+++ b/arch/arm64/boot/dts/phytium/ft1500a4-simple.dts
@@ -0,0 +1,145 @@
+/*
+ * DTS file for Phytium FT-1500A SoC
+ *
+ * Copyright (C) 2015, Phytium Technology Co., Ltd.
+ *
+ * This file is licensed under a dual GPLv2 or BSD license.
+ */
+
+/dts-v1/;
+
+/memreserve/    0x80000000 0x100000;
+/{
+	model = "phytium FT1500A/4";
+	compatible = "phytium,ft-1500a";
+	#address-cells = <0x2>;
+	#size-cells = <0x2>;
+	interrupt-parent = <&gic>;
+	
+	chosen {
+		linux,pci-probe-only; 
+	};
+	
+	cpus {
+		#address-cells = <0x2>;
+		#size-cells = <0x0>;
+
+		 cpu@0 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x000>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@1 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x001>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@2 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x002>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+		 cpu@3 {
+		 device_type = "cpu";
+		 compatible = "arm,armv8";
+		 reg = <0x0 0x003>;
+		 enable-method = "spin-table";
+		 cpu-release-addr = <0x0 0x8007fff0>;
+		 };
+
+	};
+	
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x0 0x80000000 0x0 0x80000000>;
+	};
+	
+	gic: interrupt-controller@29800000 {
+		compatible = "arm,gic-v3";
+		#interrupt-cells = <0x3>;
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+		ranges;
+		interrupt-controller;
+		reg = <0x0 0x29800000 0x0 0x00010000 
+		       0x0 0x29a00000 0x0 0x00200000 
+		       0x0 0x29c00000 0x0 0x00010000 
+		       0x0 0x29c10000 0x0 0x00010000 
+		       0x0 0x29c20000 0x0 0x00010000>;
+		interrupts = <0x1 0x9 0x4>;
+		
+		its: gic-its@29820000 {
+			compatible = "arm,gic-v3-its";
+			msi-controller;
+			reg = <0x0 0x29820000 0x0 0x00020000>;
+		};
+	};
+
+	timer { /* drivers/clocksource/arm_arch_timer.c */
+		/* CONFIG_ARM_ARCH_TIMER: 
+			select CLKSRC_OF if OF
+			select CLKSRC_ACPI if ACPI
+		*/
+		compatible = "arm,armv8-timer";
+		interrupts = <1 13 8>,
+					 <1 14 8>,
+					 <1 11 8>,
+					 <1 10 8>;
+		clock-frequency = <50000000>;
+	};
+	soc {
+		compatible = "arm,amba-bus", "simple-bus";
+		#address-cells = <0x2>;
+		#size-cells = <0x2>;
+		ranges;
+		
+		uart0: serial@28000000 {
+			compatible = "snps,dw-apb-uart";
+			reg = <0x0 0x28000000 0x0 0x1000>;
+			clock-frequency = <50000000>;
+			interrupts = <0 34 4>;
+			reg-shift = <2>;
+			reg-io-width = <4>;
+		};
+		
+		pcie0: pcie@40000000{
+			compatible = "pci-host-ecam-generic";
+			device_type = "pci";
+			#address-cells = <0x3>;
+			#size-cells = <0x2>;
+			#interrupt-cells = <0x1>;
+			dma-coherent;
+			reg = <0x0 0x40000000 0x0 0x10000000>;
+			msi-parent = <&its>;
+			interrupt-map-mask = <0x0 0x0 0x0 0x7>;
+			interrupt-map = <0x0 0x0 0x0 0x1 &gic 0x0 0x0 0x0 0x33 0x4>,
+							<0x0 0x0 0x0 0x2 &gic 0x0 0x0 0x0 0x34 0x4>,
+							<0x0 0x0 0x0 0x3 &gic 0x0 0x0 0x0 0x35 0x4>,
+							<0x0 0x0 0x0 0x4 &gic 0x0 0x0 0x0 0x36 0x4>;
+			ranges = <0x01000000 0x00 0x00000000 0x00 0x50000000 0x00 0x01000000>,
+					 <0x02000000 0x00 0x60000000 0x00 0x60000000 0x00 0x20000000>,
+					 <0x03000000 0x01 0x00000000 0x01 0x00000000 0x01 0x00000000>;
+		};
+
+		pmu {
+			compatible = "arm,cortex-a57-pmu";
+			interrupts = <0x0 0x3c 0x4 
+						  0x0 0x3d 0x4 
+						  0x0 0x3e 0x4 
+						  0x0 0x3f 0x4>;
+		};
+	};
+};
+
+&uart0 {
+	status = "ok";
+};
diff --git a/arch/arm64/configs/defconfig b/arch/arm64/configs/defconfig
index 1a4f8b67b..5393d94b2 100644
--- a/arch/arm64/configs/defconfig
+++ b/arch/arm64/configs/defconfig
@@ -45,6 +45,7 @@ CONFIG_ARCH_HISI=y
 CONFIG_ARCH_MEDIATEK=y
 CONFIG_ARCH_MESON=y
 CONFIG_ARCH_MVEBU=y
+CONFIG_ARCH_PHYTIUM=y
 CONFIG_ARCH_QCOM=y
 CONFIG_ARCH_ROCKCHIP=y
 CONFIG_ARCH_SEATTLE=y
diff --git a/arch/arm64/include/asm/fb.h b/arch/arm64/include/asm/fb.h
index adb88a64b..77a610f52 100644
--- a/arch/arm64/include/asm/fb.h
+++ b/arch/arm64/include/asm/fb.h
@@ -23,7 +23,7 @@
 static inline void fb_pgprotect(struct file *file, struct vm_area_struct *vma,
 				unsigned long off)
 {
-	vma->vm_page_prot = pgprot_writecombine(vma->vm_page_prot);
+	vma->vm_page_prot = pgprot_noncached(vma->vm_page_prot);
 }
 
 static inline int fb_is_primary_device(struct fb_info *info)
diff --git a/arch/arm64/include/asm/serial.h b/arch/arm64/include/asm/serial.h
new file mode 100644
index 000000000..fdbd30420
--- /dev/null
+++ b/arch/arm64/include/asm/serial.h
@@ -0,0 +1,11 @@
+#ifndef __ASM_GENERIC_SERIAL_H
+#define __ASM_GENERIC_SERIAL_H
+
+/*
+ * Ft1500a base_baud 
+ *
+ */
+
+#define BASE_BAUD (50000000 / 16)
+
+#endif /* __ASM_GENERIC_SERIAL_H */
diff --git a/arch/arm64/kernel/process.c b/arch/arm64/kernel/process.c
index 1945b8096..e13db39be 100644
--- a/arch/arm64/kernel/process.c
+++ b/arch/arm64/kernel/process.c
@@ -522,6 +522,162 @@ unsigned long arch_randomize_brk(struct mm_struct *mm)
 		return randomize_page(mm->brk, SZ_1G);
 }
 
+/*patch_for_ft1500a_2017011802_poweroff_by_gpio*/
+struct ft1500a_gpio {
+	int 		size;
+	unsigned int 	padd;
+	void __iomem 	*vadd;
+}; 
+
+static struct ft1500a_gpio ft1500a_gpio = {
+	.size = 0x80,		/* size of gpio*/
+	.padd = 0x28006000,     /* physize address of gpio*/
+	.vadd = NULL,		/* virtual address of gpio*/
+};
+
+#define FT1500A_GPIOREG_W(value,reg)	writel((value), ft1500a_gpio.vadd + (reg))
+#define FT1500A_GPIOREG_R(reg)		readl(ft1500a_gpio.vadd + (reg))
+
+#define GET_PORT(bit)		(bit>>3)
+#define GET_OUTPUT_REG(bit) 	(GET_PORT(bit)*0xc)
+#define GET_IO_CTRL_REG(bit) 	(GET_PORT(bit)*0xc+0x4)
+#define GET_SH_CTRL_REG(bit)	(GET_PORT(bit)*0xc+0x8)
+#define GET_BIT_MASK(bit) 	(1<<(bit&0x7))
+
+static inline void ft1500a_set_outputs(int bit0, int bit1)
+{
+	u32 tmp, reg;
+	if(GET_PORT(bit0)!=GET_PORT(bit1)){
+		/*do nothing*/
+		return ;
+	}
+	/* output mode*/
+	reg = GET_IO_CTRL_REG(bit0);
+	tmp = FT1500A_GPIOREG_R(reg);
+	tmp|= (GET_BIT_MASK(bit0)|GET_BIT_MASK(bit1));
+	FT1500A_GPIOREG_W(tmp, reg);
+	/* software mode*/
+	reg = GET_SH_CTRL_REG(bit0);
+	tmp = FT1500A_GPIOREG_R(reg);
+	tmp &= ~(GET_BIT_MASK(bit0)|GET_BIT_MASK(bit1));
+	FT1500A_GPIOREG_W(tmp, reg); 	
+}
+
+static inline void ft1500a_set_inputs(int bit0, int bit1)
+{
+	u32 tmp, reg;
+	if(GET_PORT(bit0)!=GET_PORT(bit1)){
+		/*do nothing*/
+		return ;
+	}
+	/* input mode*/
+	reg = GET_IO_CTRL_REG(bit0);
+	tmp = FT1500A_GPIOREG_R(reg);
+	tmp&= ~(GET_BIT_MASK(bit0)|GET_BIT_MASK(bit1));
+	FT1500A_GPIOREG_W(tmp, reg);
+	/* hardware mode*/
+	reg = GET_SH_CTRL_REG(bit0);
+	tmp = FT1500A_GPIOREG_R(reg);
+	tmp |= GET_BIT_MASK(bit0)|GET_BIT_MASK(bit1);
+	FT1500A_GPIOREG_W(tmp, reg); 	
+	
+}
+
+static inline void ft1500a_output_bits(int bit0, int bit1, int value0, int value1)
+{
+	u32 tmp, reg;
+	if(GET_PORT(bit0)!=GET_PORT(bit1)){
+		/*do nothing*/
+		return ;
+	}
+	/* input mode*/
+	reg = GET_OUTPUT_REG(bit0);
+	tmp = FT1500A_GPIOREG_R(reg);
+	if(value0)
+		tmp|= GET_BIT_MASK(bit0);
+	else
+		tmp&= ~GET_BIT_MASK(bit0);
+	if(value1)
+		tmp|= GET_BIT_MASK(bit1);
+	else
+		tmp&= ~GET_BIT_MASK(bit1);
+	FT1500A_GPIOREG_W(tmp, reg);
+
+}
+	
+static inline void ft1500a_delay(int d)
+{
+	int i,j,ret;
+	for(i=0;i<d;i++){
+		ret = 0;
+		for(j=0;i<9999999;i++)
+			ret += j;
+	}
+	
+}
+
+static void ft1500a_restart(enum reboot_mode reboot_mode, const char *cmd)
+{
+	int cpu = smp_processor_id();
+	printk("CPU[%d]: retstart...\n",cpu);
+
+	ft1500a_delay(1000);
+	ft1500a_output_bits(13,14,1,1);
+	ft1500a_set_outputs(13,14);
+	ft1500a_output_bits(13,14,1,1);
+	ft1500a_delay(1000);
+	ft1500a_output_bits(13,14,0,1);
+	while(1);	
+
+}
+
+static void ft1500a_poweroff(void)
+{
+	int cpu = smp_processor_id();
+	printk("CPU[%d]: poweroff...\n",cpu);
+
+	ft1500a_delay(1000);
+	ft1500a_output_bits(13,14,1,1);
+	ft1500a_set_outputs(13,14);
+	ft1500a_output_bits(13,14,1,1);
+	ft1500a_delay(1000);
+	ft1500a_output_bits(13,14,1,0);
+	while(1);	
+
+}
+#if 0
+static void ft1500a_power_off_prepare(void)
+{
+	int cpu = smp_processor_id();
+	printk("CPU[%d]: power_off_prepare...\n",cpu);	
+}
+#endif
+	
+static int ft1500a_poweroff_init(void)
+{
+
+	
+    	int ret = 0;
+
+	ft1500a_gpio.vadd = ioremap(ft1500a_gpio.padd, ft1500a_gpio.size);
+	if (!ft1500a_gpio.vadd){
+		printk("[ERROR]: gpio ioremap\n");
+		ret = -ENOMEM;
+		goto fail0;
+	}
+
+	ft1500a_set_inputs(13, 14);
+
+	pm_power_off = ft1500a_poweroff;
+//	pm_power_off_prepare = ft1500a_power_off_prepare;
+	arm_pm_restart = ft1500a_restart;
+	printk("[INFO]: poweroff init\n");	
+fail0:
+	return ret;
+}
+
+arch_initcall(ft1500a_poweroff_init);
+
 /*
  * Called from setup_new_exec() after (COMPAT_)SET_PERSONALITY.
  */
diff --git a/drivers/of/base.c b/drivers/of/base.c
index f0dbb7ad8..d6e25618e 100644
--- a/drivers/of/base.c
+++ b/drivers/of/base.c
@@ -227,19 +227,23 @@ void __init of_core_init(void)
 
 	/* Create the kset, and register existing nodes */
 	mutex_lock(&of_mutex);
+	/*
 	of_kset = kset_create_and_add("devicetree", NULL, firmware_kobj);
 	if (!of_kset) {
 		mutex_unlock(&of_mutex);
 		pr_err("failed to register existing nodes\n");
 		return;
 	}
+	*/
 	for_each_of_allnodes(np)
 		__of_attach_node_sysfs(np);
 	mutex_unlock(&of_mutex);
 
 	/* Symlink in /proc as required by userspace ABI */
+	/*
 	if (of_root)
 		proc_symlink("device-tree", NULL, "/sys/firmware/devicetree/base");
+	*/
 }
 
 static struct property *__of_find_property(const struct device_node *np,
diff --git a/drivers/of/fdt.c b/drivers/of/fdt.c
index 9fecac72c..1bdf842cf 100644
--- a/drivers/of/fdt.c
+++ b/drivers/of/fdt.c
@@ -1309,6 +1309,7 @@ void __init unflatten_and_copy_device_tree(void)
 }
 
 #ifdef CONFIG_SYSFS
+#if 0
 static ssize_t of_fdt_raw_read(struct file *filp, struct kobject *kobj,
 			       struct bin_attribute *bin_attr,
 			       char *buf, loff_t off, size_t count)
@@ -1335,5 +1336,6 @@ static int __init of_fdt_raw_init(void)
 }
 late_initcall(of_fdt_raw_init);
 #endif
+#endif
 
 #endif /* CONFIG_OF_EARLY_FLATTREE */
